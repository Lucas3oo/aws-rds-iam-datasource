plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
  id 'se.solrike.conventions.java-conventions' version '1.0.0-beta.4'
}

group = 'se.solrike.aws'
version = '0.3.0-SNAPSHOT'

dependencies {
  api 'com.zaxxer:HikariCP:5.0.1'
  api 'software.amazon.awssdk:rds:2.19.8'
  implementation 'org.slf4j:slf4j-api:1.7.36'
  testImplementation 'io.micronaut.sql:micronaut-jdbc-hikari:4.7.2'
  testImplementation 'org.assertj:assertj-core:3.22.0'
  testImplementation 'org.awaitility:awaitility:4.2.0'
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'org.mockito:mockito-core:3.7.7'
  testImplementation 'org.mockito:mockito-junit-jupiter:3.7.7'
  testImplementation 'org.springframework.boot:spring-boot-autoconfigure:2.6.8'
  testImplementation 'org.springframework.boot:spring-boot:2.6.8'
  testImplementation 'org.springframework:spring-context:5.3.20'
  testImplementation(platform('org.junit:junit-bom:5.9.1'))
  testRuntimeOnly 'com.mysql:mysql-connector-j:8.0.31'

  implementation 'log4j:log4j:1.2.17'


  constraints {
    api('commons-codec:commons-codec:1.15') {
      because 'Used by AWS SDK via Apache httpclient. Previous versions have a security bugs ([sonatype-2012-0050] CWE-20)'
    }
  }
}

// ./gradlew dependencyCheckAggregate
dependencyCheck {
  suppressionFile = rootProject.file('build-config/dependency-check/suppressions.xml')
}


def displayName = 'Solrike AWS Extras - Util classes for AWS'
def displayDescription =
  'Util classes for AWS. 1) Java SQL Datasource factory which enables IAM authentication with AWS RDS like MySQL on any Hikari datasource'


// to deploy to Maven repo: https://dev.to/kengotoda/deploying-to-ossrh-with-gradle-in-2020-1lhi

java {
  withSourcesJar()
  withJavadocJar()
}

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')


// To test when version has SNAPSHOT use ./gradlew publishToMavenLocal
// To publish use ./gradlew publish
// Don't forget to visit https://s01.oss.sonatype.org to close and release your staging repository.
// next time use: https://github.com/gradle-nexus/publish-plugin/

publishing {
  repositories {
    maven {
      def releaseRepo = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
      def snapshotRepo = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
      url = isReleaseVersion ? releaseRepo : snapshotRepo
      credentials {
        username = project.hasProperty('ossrhUsername') ? ossrhUsername : 'Unknown user'
        password = project.hasProperty('ossrhPassword') ? ossrhPassword : 'Unknown password'
      }
    }
  }

  publications {
    javaLib(MavenPublication) {
      pom {
        groupId = project.group
        name = displayName
        description = displayDescription
        url = "https://github.com/Lucas3oo/$project.name"
        from components.java
        licenses {
          license {
            name = 'MIT License'
            url = "https://github.com/Lucas3oo/$project.name/blob/main/LICENSE"
          }
        }
        scm {
          connection = "scm:git:https://github.com/Lucas3oo/${project.name}.git"
          developerConnection = "scm:git:git@github.com:Lucas3oo/${project.name}.git"
          url = "https://github.com/Lucas3oo/${project.name}.git"
        }
        developers {
          developer {
            id = 'Lucas3oo'
            name = 'Lucas Persson'
            email = 'Lucas3oo@users.noreply.github.com'
            organization = 'Lucas Persson'
            organizationUrl = 'https://github.com/Lucas3oo'
          }
        }
      }
    }
  }
}

signing {
  sign publishing.publications.javaLib
}
tasks.withType(Sign) {
  onlyIf { isReleaseVersion }
}

// to upgrade the metainfo about which gradle version we shall use. Run ./gradlew wrapper after you have updated the version. The commit the new wrapper files except the gradlew.bat
wrapper {
  gradleVersion = '8.1.1'
}
